// Code generated by go-swagger; DO NOT EDIT.

package insurance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/ccamaleon5/SaludChainClient/models"
)

// CreateHealthCredentialOKCode is the HTTP code returned for type CreateHealthCredentialOK
const CreateHealthCredentialOKCode int = 200

/*CreateHealthCredentialOK successful operation

swagger:response createHealthCredentialOK
*/
type CreateHealthCredentialOK struct {

	/*
	  In: Body
	*/
	Payload *models.Credential `json:"body,omitempty"`
}

// NewCreateHealthCredentialOK creates CreateHealthCredentialOK with default headers values
func NewCreateHealthCredentialOK() *CreateHealthCredentialOK {

	return &CreateHealthCredentialOK{}
}

// WithPayload adds the payload to the create health credential o k response
func (o *CreateHealthCredentialOK) WithPayload(payload *models.Credential) *CreateHealthCredentialOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create health credential o k response
func (o *CreateHealthCredentialOK) SetPayload(payload *models.Credential) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateHealthCredentialOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateHealthCredentialNoContentCode is the HTTP code returned for type CreateHealthCredentialNoContent
const CreateHealthCredentialNoContentCode int = 204

/*CreateHealthCredentialNoContent Patient doesn't exist

swagger:response createHealthCredentialNoContent
*/
type CreateHealthCredentialNoContent struct {
}

// NewCreateHealthCredentialNoContent creates CreateHealthCredentialNoContent with default headers values
func NewCreateHealthCredentialNoContent() *CreateHealthCredentialNoContent {

	return &CreateHealthCredentialNoContent{}
}

// WriteResponse to the client
func (o *CreateHealthCredentialNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// CreateHealthCredentialBadRequestCode is the HTTP code returned for type CreateHealthCredentialBadRequest
const CreateHealthCredentialBadRequestCode int = 400

/*CreateHealthCredentialBadRequest Invalid data supplied

swagger:response createHealthCredentialBadRequest
*/
type CreateHealthCredentialBadRequest struct {
}

// NewCreateHealthCredentialBadRequest creates CreateHealthCredentialBadRequest with default headers values
func NewCreateHealthCredentialBadRequest() *CreateHealthCredentialBadRequest {

	return &CreateHealthCredentialBadRequest{}
}

// WriteResponse to the client
func (o *CreateHealthCredentialBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// CreateHealthCredentialInternalServerErrorCode is the HTTP code returned for type CreateHealthCredentialInternalServerError
const CreateHealthCredentialInternalServerErrorCode int = 500

/*CreateHealthCredentialInternalServerError Error Internal Server

swagger:response createHealthCredentialInternalServerError
*/
type CreateHealthCredentialInternalServerError struct {
}

// NewCreateHealthCredentialInternalServerError creates CreateHealthCredentialInternalServerError with default headers values
func NewCreateHealthCredentialInternalServerError() *CreateHealthCredentialInternalServerError {

	return &CreateHealthCredentialInternalServerError{}
}

// WriteResponse to the client
func (o *CreateHealthCredentialInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
