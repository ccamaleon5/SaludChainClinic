// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a SaludChain Client that send transactions to SaludChain Blockchain \n\nSaludChain Client exposes APIs to be consume by patients, clinics, insurances, pharmacies and health institutions ",
    "title": "SaludChain APIs",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "adriancc5.5@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8000",
  "basePath": "/v1",
  "paths": {
    "/clinic/medicalappointment": {
      "put": {
        "description": "This service is responsible for book a medical appointment, that through multi signature contract, how proof blockchain generates a credential about this contract to share information with clinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "clinic"
        ],
        "summary": "Update Medical Appointment",
        "operationId": "setMedicalAttention",
        "parameters": [
          {
            "description": "Created health credential object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalAttention"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      },
      "post": {
        "description": "This service is responsible for book a medical appointment, that through multi signature contract, how proof blockchain generates a credential about this contract to share information with clinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "clinic"
        ],
        "summary": "Create Medical Appointment",
        "operationId": "bookMedicalAppointment",
        "parameters": [
          {
            "description": "Created health credential object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentSubject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      }
    },
    "/health/account/{publicKey}": {
      "get": {
        "description": "This service is responsible to create digital identity patient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Create Digital Account",
        "operationId": "createAccount",
        "parameters": [
          {
            "type": "string",
            "description": "The publicKey of digital account",
            "name": "publicKey",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The Account ID.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      }
    },
    "/health/patient/medicalrecord/share": {
      "post": {
        "description": "This service is responsible to share medical record with other entity o member that exist in SaludChain ecosystem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Share Patient's medical record",
        "operationId": "shareMedicalRecord",
        "parameters": [
          {
            "description": "Medical Record Shared",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentSubject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      },
      "delete": {
        "description": "This service is responsible for remove a medical record shared",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Revoke sharing medical information",
        "operationId": "Remove Record Shared",
        "parameters": [
          {
            "description": "Medical Record Shared",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalAttention"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      }
    },
    "/insurance/credential/": {
      "post": {
        "description": "This service is responsible for generating health insurance credential, storing the credential hash in the blockchain. You send the credential data with type of credential, range of valid dates and evidence generated about credential as optional",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "insurance"
        ],
        "summary": "Create Health Insurance Credential",
        "operationId": "createHealthCredential",
        "parameters": [
          {
            "description": "Created health credential object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CredentialSubject"
            }
          },
          {
            "type": "string",
            "description": "The Patient's public key",
            "name": "publicKey",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Id Account",
            "name": "idAccount",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "204": {
            "description": "Patient doesn't exist"
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      }
    },
    "/insurance/credential/{hashCredential}/verify": {
      "get": {
        "description": "This service verify into blockchain if the health credentials are current and these were not revoked",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "insurance"
        ],
        "summary": "Verify a health credential",
        "operationId": "verifyHealthCredential",
        "parameters": [
          {
            "type": "string",
            "description": "the hashCredential that should be validated",
            "name": "hashCredential",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid health credential supplied"
          },
          "404": {
            "description": "health credential doens't exist"
          },
          "500": {
            "description": "error internal server"
          }
        }
      }
    },
    "/insurance/credential/{publicKey}": {
      "get": {
        "description": "This service returns a health credential verifiable",
        "produces": [
          "application/json"
        ],
        "tags": [
          "insurance"
        ],
        "summary": "Get a Credential by Digital Identity",
        "operationId": "getHealthCredentialById",
        "parameters": [
          {
            "type": "string",
            "description": "the patient's digital identity public key.",
            "name": "publicKey",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid credential Id supplied"
          },
          "404": {
            "description": "ID not found"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      },
      "delete": {
        "description": "This service revokes a health credential in the credential revocation list(SaludChain) providing a publicKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "insurance"
        ],
        "summary": "Revoke a health credential",
        "operationId": "revokeCredential",
        "parameters": [
          {
            "type": "string",
            "description": "Patient's PublicKey to revoke",
            "name": "publicKey",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid publicKey supplied"
          },
          "404": {
            "description": "health credential doens't exist"
          },
          "500": {
            "description": "error Internal Server"
          }
        }
      }
    },
    "/pharmacy/recipe/{hashRecipe}/verify": {
      "get": {
        "description": "This service is responsible for verify a recipe given by Doctor in Pharmacy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pharmacy"
        ],
        "summary": "Verify Patient's recipe",
        "operationId": "verifyRecipe",
        "parameters": [
          {
            "type": "string",
            "description": "the hashCredential that should be validated",
            "name": "hashRecipe",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid hash recipe supplied"
          },
          "404": {
            "description": "health credential doens't exist"
          },
          "500": {
            "description": "error internal server"
          }
        }
      }
    }
  },
  "definitions": {
    "AppointmentSubject": {
      "type": "object",
      "properties": {
        "date": {
          "description": "appointment date",
          "type": "string",
          "format": "date-time"
        },
        "doctorPublicKey": {
          "description": "Doctor's hexadecimal public key",
          "type": "string"
        },
        "hashHealthCredential": {
          "description": "Health Credential's hash",
          "type": "string"
        },
        "patientPublicKey": {
          "description": "Patient's hexadecimal public key",
          "type": "string"
        }
      },
      "example": {
        "date": "2019-08-08T19:23:24Z",
        "doctorPublicKey": "0xB986AB2343CDD332EE2345FA442776EFAA5663D567E5342FA3232A",
        "hashCredential": "3c9f6UAYaIJsXUJDIM7lb2+tTW1ukkhnhwzDnC9h9Ksx2UtndRxAhoTyxPPGM",
        "patientPublicKey": "0xA12543122BB32323AD233D232AEE233232FF87675E23AD23CB092"
      }
    },
    "Credential": {
      "type": "object",
      "required": [
        "id",
        "type",
        "credentialSubject",
        "proof"
      ],
      "properties": {
        "credentialSubject": {
          "description": "The claims about a DID or identity that will be signed by Credential Provider"
        },
        "evidence": {
          "description": "The evidence obtained from the validation of the claims, may be photos, physical documents, links, etc"
        },
        "id": {
          "description": "The credential ID generated by the Provider Credential",
          "type": "string"
        },
        "issuanceDate": {
          "description": "credential issuance date",
          "type": "string",
          "format": "date-time"
        },
        "issuer": {
          "description": "The DID or identity of Provider Credential",
          "type": "string"
        },
        "proof": {
          "$ref": "#/definitions/Proof"
        },
        "type": {
          "description": "The types of this credential",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Credential"
      },
      "example": {
        "credentialSubject": {
          "birthDate": "1990-01-01",
          "lastname": "Perez",
          "name": "Jose",
          "title": "patient"
        },
        "evidence": {
          "face": "W8duzeDnC9h9Ksx2UtndRT6dIY9zHoSSB1/L2oMmrs//7k=",
          "photoBackDNI": "DnC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8dunC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8duzT6dIY9zHoSSB1/L2oMmrs/w4l=",
          "photoFrontDNI": "3c9f6UAYaIJsXUJDIM7lb2+tTW1ukkhnhwzDnC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8duzT6dIY9zHoSSB1/L2oMmrs//9k="
        },
        "expirationDate": "2020-01-01T19:23:24Z",
        "id": "http://example.edu/credentials/3732",
        "issuanceDate": "2010-01-01T19:23:24Z",
        "issuer": "did:eth:MIN12345",
        "proof": {
          "created": "2018-06-18T21:19:10Z",
          "signatureValue": "BavEll0/I1zpYw8XNi1bgVg/sCneO4Jugez8RwDg/+MCRVpjOboDoe4SxxKjkCOvKiCHGDvc4krqi6Z1n0UfqzxGfmatCuFibcC1wpsPRdW+gGsutPTLzvueMWmFhwYmfIFpbBu95t501+rSLHIEuujM/+PXr9Cky6Ed+W3JT24=",
          "type": "Secp256k1",
          "verificationMethod": "a12345df12ba123abcdf1298765f"
        },
        "type": [
          "VerifiableCredential",
          "HealthCredential"
        ]
      }
    },
    "CredentialSubject": {
      "type": "object",
      "properties": {
        "content": {
          "description": "The claims that will be generated with the credential"
        },
        "evidence": {
          "description": "The evidence obtained from the validation of the claims, may be photos, physical documents, links, etc"
        },
        "expirationDate": {
          "description": "credential expiration date",
          "type": "string",
          "format": "date-time"
        },
        "issuanceDate": {
          "description": "credential issuance date",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Credential Type",
          "type": "string"
        }
      },
      "example": {
        "content": {
          "birthDate": "1990-01-01",
          "lastname": "Perez",
          "name": "Jose"
        },
        "evidence": {
          "face": "W8duzeDnC9h9Ksx2UtndRT6dIY9zHoSSB1/L2oMmrs//7k=",
          "photoBackDNI": "DnC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8dunC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8duzT6dIY9zHoSSB1/L2oMmrs/w4l=",
          "photoFrontDNI": "3c9f6UAYaIJsXUJDIM7lb2+tTW1ukkhnhwzDnC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8duzT6dIY9zHoSSB1/L2oMmrs//9k="
        },
        "expirationDate": "2022-01-01T19:23:24Z",
        "issuanceDate": "2019-01-01T19:23:24Z",
        "type": "DNI"
      }
    },
    "MedicalAttention": {
      "type": "object",
      "properties": {
        "doctorPublicKey": {
          "description": "Doctor's hexadecimal public key",
          "type": "string"
        },
        "hashHealthCredential": {
          "description": "Doctor's Health Credential hash",
          "type": "string"
        },
        "medicalRecord": {
          "description": "Medical record about this medical appointment",
          "type": "string"
        },
        "patientPublicKey": {
          "description": "Patient's hexadecimal public key",
          "type": "string"
        },
        "recipe": {
          "description": "Recipe given by doctor to patient",
          "type": "string"
        }
      },
      "example": {
        "date": "2019-08-08T19:23:24Z",
        "doctorPublicKey": "0xB986AB2343CDD332EE2345FA442776EFAA5663D567E5342FA3232A",
        "hashCredential": "3c9f6UAYaIJsXUJDIM7lb2+tTW1ukkhnhwzDnC9h9Ksx2UtndRxAhoTyxPPGM",
        "patientPublicKey": "0xA12543122BB32323AD233D232AEE233232FF87675E23AD23CB092"
      }
    },
    "Proof": {
      "type": "object",
      "properties": {
        "created": {
          "description": "The date of the digital signature with format YYYY-MM-DDTHH:MM:SSZ",
          "type": "string",
          "format": "date-time"
        },
        "signatureValue": {
          "description": "the digital signature of credential provider",
          "type": "string"
        },
        "type": {
          "description": "Sign Algorithm",
          "type": "string",
          "enum": [
            "SmartContract",
            "RSASignature",
            "Secp256k1",
            "Secp256r1"
          ]
        },
        "verificationMethod": {
          "description": "The method to proof if a credential is valid. The methods can include smart contracts, public keys",
          "type": "string"
        }
      },
      "xml": {
        "name": "Proof"
      }
    }
  },
  "tags": [
    {
      "description": "Operations about Health Insurances",
      "name": "insurance"
    },
    {
      "description": "Operations about Clinics",
      "name": "clinic"
    },
    {
      "description": "Operations about Pharmacies",
      "name": "pharmacy"
    },
    {
      "description": "Operations about patient's health",
      "name": "health"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a SaludChain Client that send transactions to SaludChain Blockchain \n\nSaludChain Client exposes APIs to be consume by patients, clinics, insurances, pharmacies and health institutions ",
    "title": "SaludChain APIs",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "adriancc5.5@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8000",
  "basePath": "/v1",
  "paths": {
    "/clinic/medicalappointment": {
      "put": {
        "description": "This service is responsible for book a medical appointment, that through multi signature contract, how proof blockchain generates a credential about this contract to share information with clinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "clinic"
        ],
        "summary": "Update Medical Appointment",
        "operationId": "setMedicalAttention",
        "parameters": [
          {
            "description": "Created health credential object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalAttention"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      },
      "post": {
        "description": "This service is responsible for book a medical appointment, that through multi signature contract, how proof blockchain generates a credential about this contract to share information with clinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "clinic"
        ],
        "summary": "Create Medical Appointment",
        "operationId": "bookMedicalAppointment",
        "parameters": [
          {
            "description": "Created health credential object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentSubject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      }
    },
    "/health/account/{publicKey}": {
      "get": {
        "description": "This service is responsible to create digital identity patient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Create Digital Account",
        "operationId": "createAccount",
        "parameters": [
          {
            "type": "string",
            "description": "The publicKey of digital account",
            "name": "publicKey",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The Account ID.",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      }
    },
    "/health/patient/medicalrecord/share": {
      "post": {
        "description": "This service is responsible to share medical record with other entity o member that exist in SaludChain ecosystem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Share Patient's medical record",
        "operationId": "shareMedicalRecord",
        "parameters": [
          {
            "description": "Medical Record Shared",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentSubject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      },
      "delete": {
        "description": "This service is responsible for remove a medical record shared",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Revoke sharing medical information",
        "operationId": "Remove Record Shared",
        "parameters": [
          {
            "description": "Medical Record Shared",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MedicalAttention"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "404": {
            "description": "Resource doesn't exist"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      }
    },
    "/insurance/credential/": {
      "post": {
        "description": "This service is responsible for generating health insurance credential, storing the credential hash in the blockchain. You send the credential data with type of credential, range of valid dates and evidence generated about credential as optional",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "insurance"
        ],
        "summary": "Create Health Insurance Credential",
        "operationId": "createHealthCredential",
        "parameters": [
          {
            "description": "Created health credential object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CredentialSubject"
            }
          },
          {
            "type": "string",
            "description": "The Patient's public key",
            "name": "publicKey",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Id Account",
            "name": "idAccount",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "204": {
            "description": "Patient doesn't exist"
          },
          "400": {
            "description": "Invalid data supplied"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      }
    },
    "/insurance/credential/{hashCredential}/verify": {
      "get": {
        "description": "This service verify into blockchain if the health credentials are current and these were not revoked",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "insurance"
        ],
        "summary": "Verify a health credential",
        "operationId": "verifyHealthCredential",
        "parameters": [
          {
            "type": "string",
            "description": "the hashCredential that should be validated",
            "name": "hashCredential",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid health credential supplied"
          },
          "404": {
            "description": "health credential doens't exist"
          },
          "500": {
            "description": "error internal server"
          }
        }
      }
    },
    "/insurance/credential/{publicKey}": {
      "get": {
        "description": "This service returns a health credential verifiable",
        "produces": [
          "application/json"
        ],
        "tags": [
          "insurance"
        ],
        "summary": "Get a Credential by Digital Identity",
        "operationId": "getHealthCredentialById",
        "parameters": [
          {
            "type": "string",
            "description": "the patient's digital identity public key.",
            "name": "publicKey",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          "400": {
            "description": "Invalid credential Id supplied"
          },
          "404": {
            "description": "ID not found"
          },
          "500": {
            "description": "Error Internal Server"
          }
        }
      },
      "delete": {
        "description": "This service revokes a health credential in the credential revocation list(SaludChain) providing a publicKey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "insurance"
        ],
        "summary": "Revoke a health credential",
        "operationId": "revokeCredential",
        "parameters": [
          {
            "type": "string",
            "description": "Patient's PublicKey to revoke",
            "name": "publicKey",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid publicKey supplied"
          },
          "404": {
            "description": "health credential doens't exist"
          },
          "500": {
            "description": "error Internal Server"
          }
        }
      }
    },
    "/pharmacy/recipe/{hashRecipe}/verify": {
      "get": {
        "description": "This service is responsible for verify a recipe given by Doctor in Pharmacy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pharmacy"
        ],
        "summary": "Verify Patient's recipe",
        "operationId": "verifyRecipe",
        "parameters": [
          {
            "type": "string",
            "description": "the hashCredential that should be validated",
            "name": "hashRecipe",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "invalid hash recipe supplied"
          },
          "404": {
            "description": "health credential doens't exist"
          },
          "500": {
            "description": "error internal server"
          }
        }
      }
    }
  },
  "definitions": {
    "AppointmentSubject": {
      "type": "object",
      "properties": {
        "date": {
          "description": "appointment date",
          "type": "string",
          "format": "date-time"
        },
        "doctorPublicKey": {
          "description": "Doctor's hexadecimal public key",
          "type": "string"
        },
        "hashHealthCredential": {
          "description": "Health Credential's hash",
          "type": "string"
        },
        "patientPublicKey": {
          "description": "Patient's hexadecimal public key",
          "type": "string"
        }
      },
      "example": {
        "date": "2019-08-08T19:23:24Z",
        "doctorPublicKey": "0xB986AB2343CDD332EE2345FA442776EFAA5663D567E5342FA3232A",
        "hashCredential": "3c9f6UAYaIJsXUJDIM7lb2+tTW1ukkhnhwzDnC9h9Ksx2UtndRxAhoTyxPPGM",
        "patientPublicKey": "0xA12543122BB32323AD233D232AEE233232FF87675E23AD23CB092"
      }
    },
    "Credential": {
      "type": "object",
      "required": [
        "id",
        "type",
        "credentialSubject",
        "proof"
      ],
      "properties": {
        "credentialSubject": {
          "description": "The claims about a DID or identity that will be signed by Credential Provider"
        },
        "evidence": {
          "description": "The evidence obtained from the validation of the claims, may be photos, physical documents, links, etc"
        },
        "id": {
          "description": "The credential ID generated by the Provider Credential",
          "type": "string"
        },
        "issuanceDate": {
          "description": "credential issuance date",
          "type": "string",
          "format": "date-time"
        },
        "issuer": {
          "description": "The DID or identity of Provider Credential",
          "type": "string"
        },
        "proof": {
          "$ref": "#/definitions/Proof"
        },
        "type": {
          "description": "The types of this credential",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Credential"
      },
      "example": {
        "credentialSubject": {
          "birthDate": "1990-01-01",
          "lastname": "Perez",
          "name": "Jose",
          "title": "patient"
        },
        "evidence": {
          "face": "W8duzeDnC9h9Ksx2UtndRT6dIY9zHoSSB1/L2oMmrs//7k=",
          "photoBackDNI": "DnC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8dunC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8duzT6dIY9zHoSSB1/L2oMmrs/w4l=",
          "photoFrontDNI": "3c9f6UAYaIJsXUJDIM7lb2+tTW1ukkhnhwzDnC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8duzT6dIY9zHoSSB1/L2oMmrs//9k="
        },
        "expirationDate": "2020-01-01T19:23:24Z",
        "id": "http://example.edu/credentials/3732",
        "issuanceDate": "2010-01-01T19:23:24Z",
        "issuer": "did:eth:MIN12345",
        "proof": {
          "created": "2018-06-18T21:19:10Z",
          "signatureValue": "BavEll0/I1zpYw8XNi1bgVg/sCneO4Jugez8RwDg/+MCRVpjOboDoe4SxxKjkCOvKiCHGDvc4krqi6Z1n0UfqzxGfmatCuFibcC1wpsPRdW+gGsutPTLzvueMWmFhwYmfIFpbBu95t501+rSLHIEuujM/+PXr9Cky6Ed+W3JT24=",
          "type": "Secp256k1",
          "verificationMethod": "a12345df12ba123abcdf1298765f"
        },
        "type": [
          "VerifiableCredential",
          "HealthCredential"
        ]
      }
    },
    "CredentialSubject": {
      "type": "object",
      "properties": {
        "content": {
          "description": "The claims that will be generated with the credential"
        },
        "evidence": {
          "description": "The evidence obtained from the validation of the claims, may be photos, physical documents, links, etc"
        },
        "expirationDate": {
          "description": "credential expiration date",
          "type": "string",
          "format": "date-time"
        },
        "issuanceDate": {
          "description": "credential issuance date",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Credential Type",
          "type": "string"
        }
      },
      "example": {
        "content": {
          "birthDate": "1990-01-01",
          "lastname": "Perez",
          "name": "Jose"
        },
        "evidence": {
          "face": "W8duzeDnC9h9Ksx2UtndRT6dIY9zHoSSB1/L2oMmrs//7k=",
          "photoBackDNI": "DnC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8dunC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8duzT6dIY9zHoSSB1/L2oMmrs/w4l=",
          "photoFrontDNI": "3c9f6UAYaIJsXUJDIM7lb2+tTW1ukkhnhwzDnC9h9Ksx2UtndRxAhoTyxPPGM/rWfcW8duzT6dIY9zHoSSB1/L2oMmrs//9k="
        },
        "expirationDate": "2022-01-01T19:23:24Z",
        "issuanceDate": "2019-01-01T19:23:24Z",
        "type": "DNI"
      }
    },
    "MedicalAttention": {
      "type": "object",
      "properties": {
        "doctorPublicKey": {
          "description": "Doctor's hexadecimal public key",
          "type": "string"
        },
        "hashHealthCredential": {
          "description": "Doctor's Health Credential hash",
          "type": "string"
        },
        "medicalRecord": {
          "description": "Medical record about this medical appointment",
          "type": "string"
        },
        "patientPublicKey": {
          "description": "Patient's hexadecimal public key",
          "type": "string"
        },
        "recipe": {
          "description": "Recipe given by doctor to patient",
          "type": "string"
        }
      },
      "example": {
        "date": "2019-08-08T19:23:24Z",
        "doctorPublicKey": "0xB986AB2343CDD332EE2345FA442776EFAA5663D567E5342FA3232A",
        "hashCredential": "3c9f6UAYaIJsXUJDIM7lb2+tTW1ukkhnhwzDnC9h9Ksx2UtndRxAhoTyxPPGM",
        "patientPublicKey": "0xA12543122BB32323AD233D232AEE233232FF87675E23AD23CB092"
      }
    },
    "Proof": {
      "type": "object",
      "properties": {
        "created": {
          "description": "The date of the digital signature with format YYYY-MM-DDTHH:MM:SSZ",
          "type": "string",
          "format": "date-time"
        },
        "signatureValue": {
          "description": "the digital signature of credential provider",
          "type": "string"
        },
        "type": {
          "description": "Sign Algorithm",
          "type": "string",
          "enum": [
            "SmartContract",
            "RSASignature",
            "Secp256k1",
            "Secp256r1"
          ]
        },
        "verificationMethod": {
          "description": "The method to proof if a credential is valid. The methods can include smart contracts, public keys",
          "type": "string"
        }
      },
      "xml": {
        "name": "Proof"
      }
    }
  },
  "tags": [
    {
      "description": "Operations about Health Insurances",
      "name": "insurance"
    },
    {
      "description": "Operations about Clinics",
      "name": "clinic"
    },
    {
      "description": "Operations about Pharmacies",
      "name": "pharmacy"
    },
    {
      "description": "Operations about patient's health",
      "name": "health"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}`))
}
